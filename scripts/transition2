#! /usr/bin/env ruby

require 'roby'
require 'syskit'
require 'Qt'
require 'metaruby/gui/html/page'
require 'syskit/gui/page'
require 'syskit/gui/component_network_view'

Roby.app.robot 'avalon'
Roby.app.using_plugins 'syskit'
Syskit.conf.only_load_models = true
Syskit.conf.disables_local_process_server = true
Roby.app.single = true
app = Qt::Application.new(ARGV)

#Loggers are broken here
Syskit.conf.disable_logging
Syskit.conf.disable_conf_logging

GUI = true

if GUI
    display = Qt::WebView.new
    display.show
    page = MetaRuby::GUI::HTML::Page.new(display.page)
    rendering = Syskit::GUI::ComponentNetworkView.new(page)
end

def update(plan, requirements)
    tasks = requirements.map do |req|
        plan.add_mission(task = req.as_plan)
        task.planning_task
    end
    engine = Syskit::NetworkGeneration::Engine.new(plan)
    engine.resolve(:requirement_tasks => tasks)
    plan.static_garbage_collect do |task|
        plan.remove_object(task)
    end
    tasks.each do |t|
        plan.unmark_mission t.planned_task
    end
end

def precompute(plan,requirements)
    tasks = requirements.map do |req|
        plan.add_mission(task = req.as_plan)
        task.planning_task
    end
    engine = Syskit::NetworkGeneration::Engine.new(plan)
    engine.precompute(:requirement_tasks => tasks)

end

begin
    Roby.app.setup
    passes = Array.new 
    passes << [Main.joystick_dev.to_instance_requirements]
    passes << [Main.pipeline_def.to_instance_requirements,Main.joystick_dev.to_instance_requirements]
    passes << [Main.buoy_def.to_instance_requirements,Main.joystick_dev.to_instance_requirements]
#    passes << [Main.target_move_def.to_instance_requirements,Main.joystick_dev.to_instance_requirements]
    #passes << [Main.wall_right_def.to_instance_requirements,Main.joystick_dev.to_instance_requirements]
    #passes << [Main.bottom_cam_def.to_instance_requirements,Main.joystick_dev.to_instance_requirements]

    passes.each_with_index do |requirements, idx|
        #precompute(rendering.plan, requirements)
        update(rendering.plan, requirements)
        rendering.render_plan(:id => idx.to_s)
    end
ensure Roby.app.cleanup
end

app.exec

