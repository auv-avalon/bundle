#! /usr/bin/env ruby

require 'roby/standalone'
require 'roby/log/event_stream'
require 'roby/log/plan_rebuilder'

stream = Roby::LogReplay::EventFileStream.open(ARGV.shift)
rebuilder = Roby::LogReplay::PlanRebuilder.new

model_name = ARGV.shift

state = Hash.new
model = rebuilder.find_model(stream, /#{model_name}/i)

all_tasks = ValueSet.new
rebuilder.analyze_stream(stream) do
    tasks = rebuilder.plan.find_tasks(model).to_a
    all_tasks.merge(tasks.to_value_set)
    false
end

all = []
all_tasks.each do |p|
    p.history.each do |ev|
        all << ev
    end
end

symbol_width = all.map(&:symbol).map(&:to_s).map(&:size).max

all.sort_by { |ev| ev.time }.each do |ev|
    puts "%s   %-#{symbol_width}s   %s" % [Roby.format_time(ev.time), ev.symbol, ev.task]
end
